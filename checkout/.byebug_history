exit
promotions.each{|p| puts p}
deduction
promotions.each {|p| deduction + p.apply({total: before_discount, basket: basket})}
exit
promotions.each {|p| p.apply({total: before_discount, basket: basket}) }exit
promotions.each {|p| p.apply({total: before_discount, basket: basket}) }
exit
promotions
exit
discount
exit
EXIT
exit
percentage.percentage
percentage
exit
basket[multibuy[:item]] * multibuy[:discount]
'£%.2f' % basket[multibuy[:item]] * multibuy[:discount].round(2)
'£%.2f' % basket[multibuy[:item]] * multibuy[:discount]
basket[multibuy[:item]] * multibuy[:discount]
4 examples, 2 failures
basket[multibuy[:item]] >= multibuy[:quantity]
exit
basket[multi[:item]]
basket
exit
multi
exit
multi(60)
before_discount
multi(before_discount)
exit
'£%.2f' % before.round(2)
before - 10
before
discount(before)
before
exit
percent(66)
before_discount
exit
discount(66)
percent(22)
discount(22)
discount(before_discount)
before_discount
